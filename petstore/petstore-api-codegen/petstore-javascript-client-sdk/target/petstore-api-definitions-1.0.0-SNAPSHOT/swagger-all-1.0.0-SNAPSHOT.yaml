openapi: 3.0.1
info:
  title: Petstore API project
  version: 1.0.0-SNAPSHOT
paths:
  /petstore/v4.r1.a1/pet/id/{petId}:
    get:
      tags:
      - Pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
      - name: petId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/petstore.v4.r1.a1.pet.PetApiResponse'
    x-api-namespace: petstore
    x-api-namespace-version: v4.r1
    x-api-namespace-module: pet
    x-odp-apioperation-package: /petstore/v4.r1.a1/pet
    x-odp-apioperation-tag: __/petstore/v4_r1_a1/pet__Pet
  /petstore/v4.r1.a1/pet/create:
    post:
      tags:
      - Pet
      summary: Create a single pet
      operationId: createPet
      requestBody:
        description: Create a Pet data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/petstore.v4.r1.a1.pet.Pet'
        required: true
      responses:
        202:
          description: Task Id corresponding to the Pet data creation
          content:
            application/json:
              schema:
                properties:
                  taskUUID:
                    pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                    type: string
                    description: UUID of the task
    x-api-namespace: petstore
    x-api-namespace-version: v4.r1
    x-api-namespace-module: pet
    x-odp-apioperation-package: /petstore/v4.r1.a1/pet
    x-odp-apioperation-tag: __/petstore/v4_r1_a1/pet__Pet
components:
  schemas:
    petstore.v4.r1.a1.pet.Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    petstore.v4.r1.a1.pet.Pet:
      required:
      - name
      - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/petstore.v4.r1.a1.pet.Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/petstore.v4.r1.a1.pet.Tag'
        status:
          type: string
          description: pet status in the store
          enum:
          - available
          - pending
          - sold
      xml:
        name: Pet
    petstore.v4.r1.a1.pet.Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    petstore.v4.r1.a1.pet.ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    petstore.v4.r1.a1.pet.ApiResponseMetadata:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/petstore.v4.r1.a1.pet.ApiLink'
      description: Metadata associated with API responses
    petstore.v4.r1.a1.pet.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: The URL that points to the relationship
        rel:
          type: string
          description: The name of the relationship
      description: HATEOAS links for the request.  For paginated requests includes
        prev/next/first and last links
    petstore.v4.r1.a1.pet.PetApiResponse:
      type: object
      properties:
        data:
          discriminator:
            propertyName: objectType
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/common.v1.r0.a1.config.Message'
          - $ref: '#/components/schemas/petstore.v4.r1.a1.pet.Pet'
        metadata:
          $ref: '#/components/schemas/common.v1.r0.a1.response.ApiResponseMetadata'
      description: REST Response for  Pet type
    common.v1.r0.a1.config.BaseEnum:
      type: string
      enum:
      - $UNKNOWN
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
    common.v1.r0.a1.config.MessageSeverity:
      description: |
        The message severity.
      allOf:
      - $ref: '#/components/schemas/common.v1.r0.a1.config.BaseEnum'
      - type: string
        enum:
        - INFO
        - WARNING
        - ERROR
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
    common.v1.r0.a1.config.Message:
      type: object
      properties:
        code:
          type: string
          description: |
            A code that uniquely identifies a message.
        message:
          type: string
        locale:
          type: string
          description: |
            The locale for the message description.
          default: en_US
        severity:
          $ref: '#/components/schemas/common.v1.r0.a1.config.MessageSeverity'
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
    common.v1.r0.a1.config.Flag:
      type: object
      properties:
        name:
          type: string
        value:
          type: boolean
          default: false
      description: |
        Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of an object must have an attribute called x-bounded-map-keys that tells what flags are actually present for that entity.
      x-codegen-hint:
        java:
          type: bounded-map
          valueType: boolean
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
    common.v1.r0.a1.response.ApiResponseMetadata:
      type: object
      properties:
        flags:
          type: array
          items:
            $ref: '#/components/schemas/common.v1.r0.a1.config.Flag'
          x-codegen-hint:
            java:
              type: bounded-map
              default: false
              bounded-map-keys:
              - hasError
              - isPaginated
        links:
          type: array
          items:
            $ref: '#/components/schemas/common.v1.r0.a1.response.ApiLink'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/common.v1.r0.a1.config.Message'
      description: |
        The metadata associated with an API response. Always present and minimally contains the self link for the API request that produced this response.  Also contains pagination data for paginated requests.
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
    common.v1.r0.a1.response.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: The URL that points to the relationship
        rel:
          type: string
          description: The name of the relationship
      description: |
        A HATEOAS style link for the response.  Each link contains a user friendly name identifying the link and an address at which the particular resource can be retrieved.
      x-external-model: true
      x-external-repo-name: common
      x-external-namespace-version-folder-path: /namespaces/common/versioned/v1/
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
