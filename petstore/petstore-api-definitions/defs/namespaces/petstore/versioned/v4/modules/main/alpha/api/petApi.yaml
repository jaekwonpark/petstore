paths:
  /pet:
    post:
      tags:
        - "ApiEndpoint(Pet)"
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: DocRef(addPet)
        required: true
        content:
          application/json:
            schema:
              $ref: "ModelRef({/namespaces/petstore/versioned/v4/modules/main/alpha/models/Pet})"
      responses:
        202:
          description: DocRef(addPetResp)
          content:
            application/json:
              schema:
                $ref: "ApiResponse({ext:common:/namespaces/common/versioned/v1/modules/response/alpha/models/apiResponse},
                                  {/namespaces/petstore/versioned/v4/modules/main/alpha/models/Pet}, false)"

  /pet/{petId}:
    get:
      tags:
        - "ApiEndpoint(Pet)"
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: DocRef(getPetById)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "ApiResponse({ext:common:/namespaces/common/versioned/v1/modules/response/alpha/models/apiResponse},
                                   {/namespaces/petstore/versioned/v4/modules/main/alpha/models/Pet}, false)"

  /pet/{petId}/uploadImage:
    post:
      tags:
        - "ApiEndpoint(Pet)"
      summary: Uploads an image
      operationId: uploadFile
      consumes:
        - application/octet-stream
        - image/jpeg
      parameters:
        - name: petId
          in: path
          description: DocRef(paramPetId)
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        description: DocRef(uploadFile)
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: DocRef(uploadResp)
          content:
            application/json:
              schema:
                $ref: "ApiResponse({ext:common:/namespaces/common/versioned/v1/modules/response/alpha/models/apiResponse},
                                  {/namespaces/petstore/versioned/v4/modules/main/alpha/models/Pet}, false)"
  /pet/{petId}/downloadImage:
    get:
      tags:
        - "ApiEndpoint(Pet)"
      summary: Download an image
      description: Downloads a pet image file
      operationId: getImageById
      produces:
        - application/octet-stream
      parameters:
        - name: petId
          in: path
          description: DocRef(getImageById)
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/alpha/models/DownloadImage}, responses)"
